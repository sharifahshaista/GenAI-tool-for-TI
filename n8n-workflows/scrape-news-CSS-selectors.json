{
  "name": "n8n-scrape-news-CSS-selectors",
  "nodes": [
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4",
          "mode": "list",
          "cachedResultName": "testing",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1858366376,
          "mode": "list",
          "cachedResultName": "results",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit#gid=1858366376"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $json['[\\'Title \\']'] }}",
            "pubDate": "={{ $json['[\\'Publication Date\\']'] }}",
            "URL": "={{ $json.URL }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        496,
        1024
      ],
      "id": "06959c82-e1a1-42f8-9016-2ff53e231ecb",
      "name": "Add to sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WB4WNoXsLpMD79Pz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [{\n  json: {\n    page: Number($('Changes the page number in URL template').first().json.page) + 1\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        672,
        1040
      ],
      "id": "41608f2a-7fdf-4dd7-be5f-36528fbeb59f",
      "name": "Code9"
    },
    {
      "parameters": {
        "fieldToSplitOut": "['Title '], ['Publication Date'], URL",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -48,
        816
      ],
      "id": "82b0d575-bd13-4b78-9eae-9c46fa264ee9",
      "name": "Split Out4"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2384,
        144
      ],
      "id": "728a4855-66b4-4d65-a8bb-387402b36e12",
      "name": "Loop Over Items3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me3",
      "typeVersion": 1,
      "position": [
        3584,
        160
      ],
      "id": "dae95dd4-a1b6-46e6-9440-4956197810f3"
    },
    {
      "parameters": {
        "url": "={{ $json.chatInput }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -1776,
        800
      ],
      "id": "94eb7517-07b6-4849-b4ef-1a139fc895ac",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "content": "## Step 2: Identify the nature of the website\nInstructed an AI agent to identify 3 key features, under the assumption that it's a news-aggregator website â€“ Pagination, CSS, and whether it is static/dynamic.\n\nIf pagination involves clicking buttons, the agent is expected to identify the absolute structure of the website (pattern identification) in order to define an iterative approach later on.\n\nTo ensure the agent doesn't fail, the only tool it has is to perform basic HTTP GET requests which documents the HTML of the website.\n\n\n",
        "height": 576,
        "width": 288,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1888,
        192
      ],
      "id": "e096c93b-656f-4a1d-976c-545e4704d47b",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a helpful, intelligent assistant tasked to identify the nature of the news-aggregator website from the user input. Given the tool to perform HTTP GET requests, you are to identify the following features of the website {{ $json.chatInput }} and the CSS for some needed parts:\n\n- Pagination: Indicate whether the website contains a \"Next page\" button for additional content, or \"continuous scrolling\". If it contains a \"Next page\" button, state the absolute URL structure to handle pagination.\n- CSS Selectors: Accurately define the CSS selectors of articles' titles, publication dates, and their corresponding absolute URLs. You must return the CSS selectors of these fields, do not return an empty string.\n\nStrictly return the following JSON format:\n{\n   \"Pagination\": \"\",\n   \"next_page_url_structure\":\"\",\n   \"CSS\": {\n        \"title\": \"\",\n        \"Publication date\": \"\",\n        \"URL\": \"\"\n      }\n}\n\nExample:\n{\n   \"Nature\": \"static\",\n   \"Pagination\": \"Next page\",\n   \"next_page_url_structure\":\"\nhttps://cleantechnica.com/page/{page_number}/\",\n   \"CSS\": {\n        \"title\": \"h2.cm-entry-title a\",\n        \"Publication date\": \"time.entry-date.published\",\n        \"URL\": \"h2.cm-entry-title a\"\n      }\n} ",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1872,
        624
      ],
      "id": "bcac3cb2-4679-49c7-b070-e65e10a4b6d9",
      "name": "website analyser!"
    },
    {
      "parameters": {
        "content": "## Step 1: news-aggregator URL Input in the chat below\nFor the purpose of populating the database, the workflow will only work if the user inputs the precise URL of whatever site he wants to crawl.",
        "height": 320,
        "width": 400,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2352,
        448
      ],
      "id": "34396ee2-1a67-4471-b0d6-c0429aec1711",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"Pagination\": {\n      \"type\": \"string\"\n    },\n    \"next_page_url_structure\": {\n      \"type\": [\"string\", \"null\"]\n    },\n    \"CSS\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"Publication date\": {\n          \"type\": \"string\"\n        },\n        \"URL\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"title\", \"Publication date\", \"URL\"]\n    }\n  },\n  \"required\": [\"Pagination\", \"next_page_url_structure\", \"CSS\"]\n}\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1664,
        800
      ],
      "id": "2e09a401-2679-46a9-bf75-140c7a4fa469",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -2208,
        624
      ],
      "id": "4cb3dd9c-a0c9-44d3-906d-b60840451f3f",
      "name": "When chat message received",
      "webhookId": "d65911fc-dc51-447a-9208-7236e66580ac"
    },
    {
      "parameters": {
        "content": "### Phase 1: gathering the title, publication date and absolute URLs of articles. Some sites may include categories/tags which are also useful to capture.\n\nThis \"IF\" node is to distinguish between sites that navigate using a \"next page\" button and ones with infinite scrolling. True for sites with \"next page\" button\n\n*Note: Some sites may include categories/tags which are also useful to capture. This was not included in the system prompt for the agent*",
        "height": 864,
        "width": 2592,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1536,
        384
      ],
      "id": "401c6ffc-0944-4e21-8669-14568c95db8a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a3991c25-7b36-4d4d-9683-8d11b7ec56b2",
              "leftValue": "={{ $json.output.Pagination }}",
              "rightValue": "Next page",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1520,
        624
      ],
      "id": "a8018dbf-3435-4148-be23-24fd840dbcb5",
      "name": "Pagination type",
      "notesInFlow": true,
      "notes": "Determines whether the site has \"Next\" button or infinite scrolling. Propose to use Puppeteer if infinite scrolling exists (i.e. gesda.global news and events)"
    },
    {
      "parameters": {
        "content": "### Terminating condition: articles within a month from now\n\n## **May need to call a current_time tool or some sort to avoid manually changing this.** \n\nIt's changed manually here.",
        "height": 480,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        96,
        464
      ],
      "id": "fc8f3eb0-e4ea-4b42-b720-2c9823c573d3",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "Title ",
              "cssSelector": "={{ $('Changes the page number in URL template').item.json.title }}",
              "returnArray": true
            },
            {
              "key": "Publication Date",
              "cssSelector": "={{ $('Changes the page number in URL template').item.json.pubDate }}",
              "returnArray": true
            },
            {
              "key": "URL",
              "cssSelector": "={{ $('Changes the page number in URL template').item.json.article_url }}",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -256,
        816
      ],
      "id": "dab77dea-c7cc-4b44-b0ae-7353174fe2d2",
      "name": "HTML"
    },
    {
      "parameters": {
        "content": "### Modify URL structure according to pagination type\n\nlike `https://techcrunch.com/category/climate/page/${page}`;\n\n${page} gets modified by a number from 'Increment page number' code node",
        "height": 368,
        "width": 256,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -768,
        592
      ],
      "id": "b5b6e4d7-a738-41d6-b8bb-9cbe400072fd",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "### Extract titles, dates and articles' absolute URLs using selectors identified by agent",
        "height": 336,
        "width": 160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -304,
        624
      ],
      "id": "bd2326bd-922b-4f23-8fdc-66b26681ff99",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "### Structure meta data article by article",
        "height": 272,
        "width": 160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -96,
        688
      ],
      "id": "c365e083-ce13-48c1-82e5-75db276e9a6f",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "### Intermediate step necessary \n\nFor next phase, the \"click-throughs\" into each article",
        "height": 288,
        "width": 192,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        432,
        864
      ],
      "id": "b878cd16-6f15-41ef-9bb7-db2913b0169c",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "### Increment page number ",
        "height": 224,
        "width": 160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        928
      ],
      "id": "37b1aea4-8271-4a76-ab18-bc084985b8b3",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "content": "### Phase 2: Extracting article main content\n\nThe logic is the same, get an agent to specify the selector for the main content then let the scrape run",
        "height": 464,
        "width": 2624,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1072,
        0
      ],
      "id": "3f9a99ce-1c0f-40c5-9174-c7ef4251b0b7",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"CSS\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"content\": {\n          \"type\": \"string\"\n        },\n        \"category\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"content\", \"category\"]\n    }\n  },\n  \"required\": [\"CSS\"]\n}\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1776,
        336
      ],
      "id": "9372d634-79cc-4c2b-862d-568c592c8f06",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "url": "={{ $('Get row(s) in spreadsheet').item.json.URL }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1680,
        336
      ],
      "id": "df0c1a7a-860c-4699-90e8-304cf0dc77e5",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "content": "### Phase 3: Summarisation, Prediction Classification\n\nSelf-explanatory in the name.\n\n* Summarise the article content.\n* Predict the technology readiness level of the climatetech from the content, if feasible.\n* Classify the article into categories. For a good reference on categories, click on \"View all topics\" on https://www.canarymedia.com/\n(slightly less than 60 topics)",
        "height": 528,
        "width": 2032,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1968,
        400
      ],
      "id": "64c5102e-7002-4477-ae0d-63e39d6262c1",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4",
          "mode": "list",
          "cachedResultName": "testing",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1858366376,
          "mode": "list",
          "cachedResultName": "results",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit#gid=1858366376"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "URL",
              "lookupValue": "={{ $json.URL }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2544,
        608
      ],
      "id": "fca210d7-dceb-43ea-9d38-9169f9d2b525",
      "name": "Get row(s) in sheet2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WB4WNoXsLpMD79Pz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "This \"IF\" node serves as a means for me to continue a workflow from where it left off before an error occurs",
        "height": 176,
        "width": 176,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1232,
        256
      ],
      "id": "9edded1e-f407-473a-b5b5-81c3b02bdc34",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"content\": \"{{ $json.Content }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2960,
        608
      ],
      "id": "c402cb86-812a-4ec1-b591-ec1720b56a82",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4",
          "mode": "list",
          "cachedResultName": "testing",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1858366376,
          "mode": "list",
          "cachedResultName": "results",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit#gid=1858366376"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Content": "={{ $('Edit Fields2').item.json.content }}",
            "summary": "={{ $json.output.text }}\n"
          },
          "matchingColumns": [
            "Content"
          ],
          "schema": [
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        3616,
        592
      ],
      "id": "591d5552-1719-438d-a953-90bb18b69b15",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WB4WNoXsLpMD79Pz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2752,
        608
      ],
      "id": "b3ccd42e-573b-4cd5-8976-34390b5a712a",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me1",
      "typeVersion": 1,
      "position": [
        3856,
        608
      ],
      "id": "fab1136d-7e99-4554-b3b1-f58a624dff0b"
    },
    {
      "parameters": {
        "model": "pmo-gpt-4.1-nano",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        -2112,
        816
      ],
      "id": "f02b9241-64cb-4d48-af60-f6dbb56bf41e",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "HbTZ6WoTvPJ767MH",
          "name": "Azure Open AI account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "pmo-gpt-4.1-nano",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        1472,
        336
      ],
      "id": "365a7081-1aac-45eb-a1f6-aec503a64910",
      "name": "Azure OpenAI Chat Model1",
      "credentials": {
        "azureOpenAiApi": {
          "id": "HbTZ6WoTvPJ767MH",
          "name": "Azure Open AI account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "88c70377-57f8-48ce-956e-44e02589328f",
              "leftValue": "={{ $json['[\\'Publication Date\\']'] }}",
              "rightValue": "2025-09-18T00:00:00",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        160,
        816
      ],
      "id": "ea56f146-59cd-4ff8-9b55-6e649f70789a",
      "name": "datetime condition"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "You are a helpful, intelligent assistant tasked to identify the nature of the news-aggregator website from the user input. Given the tool to perform HTTP GET requests, you are to identify the the CSS for the main content and the categories/tags of the article:\n\nStrictly return the following JSON format:\n{\n   \"CSS\": {\n        \"category\": \"\"\n        \"content\": \"\"\n      }\n}\n\nYou must not return an empty string.\n\nExample:\n{\n   \"CSS\": {\n        \"category\": \"article > footer > div.references > div.tags\"\n        \"content\": \"article > main\"\n      }\n}\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1584,
        144
      ],
      "id": "ee18f47b-5ff8-4b3f-99dd-83b8482de601",
      "name": "Article analyser",
      "executeOnce": true
    },
    {
      "parameters": {
        "content": "### Reason for AI agents in the workflow to identify CSS selectors:\n\nCSS selectors give the most accurate scrapped results. In contrast, if tasking an agent to output the scrapped data, there may be incorrect dates, content etc. \n\nLeveraging on the HTML extract node in n8n.\n\nCatch: finding selectors is seemingly easy but some websites' selectors are 'nested' a lot. Example: Article content is found using **\"#content > div > div > div.row > div.col-lg-9.col-md-12.col-sm-12.col-xs-12.main-section > div:nth-child(1) > article > main > div.elementor-element.elementor-element-e9eb323.elementor-widget.elementor-widget-theme-post-content\"**",
        "height": 336,
        "width": 480
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1568,
        -224
      ],
      "id": "d6d7a788-d776-4af7-9a28-10624227ac8b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "model": "pmo-gpt-4.1-nano",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        3200,
        640
      ],
      "id": "ee3b82da-fef2-49c5-a753-516a3cbab13a",
      "name": "Azure OpenAI Chat Model2",
      "credentials": {
        "azureOpenAiApi": {
          "id": "HbTZ6WoTvPJ767MH",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"page\": {{ Number($json.page ?? 1) }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -928,
        816
      ],
      "id": "14468037-2648-4175-8e52-62455737ddc5",
      "name": "initialise/configure page number"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"url_template\": \"{{ $json.output.next_page_url_structure }}\",\n  \"CSS\": {\n    \"title\": \"{{ $('website analyser!').first().json.output?.CSS?.title || '' }}\",\n    \"Publication date\": \"{{ $('website analyser!').first().json.output?.CSS?.['Publication date'] || '' }}\",\n    \"URL\": \"{{ $('website analyser!').first().json.output?.CSS?.URL || '' }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1136,
        816
      ],
      "id": "7cc815eb-edbe-4502-8e73-f2851085da55",
      "name": "URL template and CSS structure",
      "notesInFlow": true,
      "notes": "This node is necessary, because in the looping structure the workflow sometimes cannot retrieve these features too far back at the beginning of the workflow."
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        816
      ],
      "id": "119e8344-3971-417e-bf3a-4b26c3702570",
      "name": "call the website"
    },
    {
      "parameters": {
        "jsCode": "const page = Number($input.first().json.page) || 1;\n\nlet urlTemplate = $('URL template and CSS structure').first().json.url_template;\n\nconst url = urlTemplate.replace(\"{page_number}\", page);\n\nconst title = $('URL template and CSS structure').first().json.CSS.title;\nconst pubDate = $('URL template and CSS structure').first().json.CSS['Publication date'];\nconst article_url = $('URL template and CSS structure').first().json.CSS.URL\n\n\nreturn [{\n  json: {\n    url,\n    page,\n    title,\n    pubDate, \n    article_url\n  }\n}];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -688,
        816
      ],
      "id": "7f894848-3133-499b-90df-229bdb0c9f1a",
      "name": "Changes the page number in URL template"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"CSS\": {\n    \"content\": \" {{ $json.output.CSS.content }}\",\n    \"category\": \"{{ $json.output.CSS.category }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        144
      ],
      "id": "f4fb2dfe-3dc4-4dae-9694-64559c52233b",
      "name": "configure CSS content and category"
    },
    {
      "parameters": {
        "jsCode": "const contentArr = $json.content; \n\nconst cleaned = contentArr\n  .map(s => s.replace(/\\s+/g, ' ').trim()) \n  .filter(s => s.length > 0) \n  .join('\\n\\n'); // joins as paragraphs\n\nreturn [\n  {\n    json: {\n      cleaned_content: cleaned\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3184,
        160
      ],
      "id": "1912372d-be21-4ec8-8088-fefd2c65f1fa",
      "name": "Clean up scrapped content data",
      "notesInFlow": true,
      "notes": "Remove line breaks and whatnot, they're unnecessary tokens"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "content",
              "cssSelector": "={{ $('configure CSS content and category').item.json.CSS.content }}",
              "returnArray": true
            },
            {
              "key": "category",
              "cssSelector": "={{ $('configure CSS content and category').item.json.CSS.category }}",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        2976,
        160
      ],
      "id": "54d05e76-d213-4193-a61b-809d91f3cf61",
      "name": "content extractor"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2768,
        160
      ],
      "id": "5906ec81-3083-4334-8424-3d116c0e6fa1",
      "name": "buffer (to prevent connectivity to server errors)",
      "webhookId": "7a8cea4e-e5df-4f61-8b65-46e8d450a9df"
    },
    {
      "parameters": {
        "url": "={{ $json.URL }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2576,
        160
      ],
      "id": "8c012b49-ba86-4d3c-a2f8-aca05c3dd593",
      "name": "call the article page"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "86edc483-13ee-4b08-9fae-5b199351643b",
              "leftValue": "={{ $json.row_number }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1264,
        160
      ],
      "id": "2e96348d-a901-46c0-91ac-c7f6a80350b7",
      "name": "start from row 2",
      "notesInFlow": true,
      "notes": "Assumes Row 1 is just column headers"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4",
          "mode": "list",
          "cachedResultName": "testing",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1858366376,
          "mode": "list",
          "cachedResultName": "results",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit#gid=1858366376"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1088,
        160
      ],
      "id": "1102cc7b-2655-4344-937f-3f6b7a4fc0b7",
      "name": "Get row(s) in spreadsheet",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WB4WNoXsLpMD79Pz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1584,
        336
      ],
      "id": "2c09abff-20d9-4f69-b4fe-278b5a6ccb7e",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "wamTiyiZyZv3KyRE",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4",
          "mode": "list",
          "cachedResultName": "testing",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1858366376,
          "mode": "list",
          "cachedResultName": "results",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit#gid=1858366376"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "URL": "={{ $('start from row ').item.json.URL }}",
            "Content": "={{ $json.cleaned_content }}",
            "Category": "={{ $('content extractor').item.json.category.join(\", \") }}"
          },
          "matchingColumns": [
            "URL"
          ],
          "schema": [
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        3392,
        160
      ],
      "id": "f6d93171-02ce-47a5-bab4-4c9575dc23bf",
      "name": "Update row for 'content' and 'category'",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WB4WNoXsLpMD79Pz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4",
          "mode": "list",
          "cachedResultName": "testing",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1858366376,
          "mode": "list",
          "cachedResultName": "results",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1iRcnt7kPqXvMCUCuAC5X_Xr18-yIoVjtq3Dsl8HUTt4/edit#gid=1858366376"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2080,
        144
      ],
      "id": "2a3e0af7-3789-4fa8-9eb3-5ae2323bd2e4",
      "name": "Get row(s) in spreadsheet1",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WB4WNoXsLpMD79Pz",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "86edc483-13ee-4b08-9fae-5b199351643b",
              "leftValue": "={{ $json.row_number }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2224,
        144
      ],
      "id": "0f0e197d-4f96-4d42-ba61-8fa7f32404a4",
      "name": "start from row ",
      "notesInFlow": true,
      "notes": "Assumes Row 1 is just column headers"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1936,
        816
      ],
      "id": "efd0651a-639e-41a0-85b8-23c7ac4a7bae",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "wamTiyiZyZv3KyRE",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "summarizationMethodAndPrompts": {
            "values": {
              "combineMapPrompt": "=Write a concise summary of the following:\n\n\n\"{{ $json.content }}\"\n\n\nCONCISE SUMMARY: ",
              "prompt": ""
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2.1,
      "position": [
        3200,
        480
      ],
      "id": "5dcd0a04-b6f5-4453-bfc7-208f4c279681",
      "name": "Summarization Chain"
    }
  ],
  "pinData": {},
  "connections": {
    "Add to sheet1": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "initialise/configure page number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out4": {
      "main": [
        [
          {
            "node": "datetime condition",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "call the article page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me3": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "ai_tool": [
        [
          {
            "node": "website analyser!",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "website analyser!": {
      "main": [
        [
          {
            "node": "Pagination type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "website analyser!",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "website analyser!",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pagination type": {
      "main": [
        [
          {
            "node": "URL template and CSS structure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Split Out4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Article analyser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "Article analyser",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Azure OpenAI Chat Model1": {
      "ai_languageModel": [
        []
      ]
    },
    "datetime condition": {
      "main": [
        [
          {
            "node": "Add to sheet1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s) in spreadsheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Article analyser": {
      "main": [
        [
          {
            "node": "configure CSS content and category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "initialise/configure page number": {
      "main": [
        [
          {
            "node": "Changes the page number in URL template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL template and CSS structure": {
      "main": [
        [
          {
            "node": "initialise/configure page number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "call the website": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Changes the page number in URL template": {
      "main": [
        [
          {
            "node": "call the website",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "configure CSS content and category": {
      "main": [
        [
          {
            "node": "Get row(s) in spreadsheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean up scrapped content data": {
      "main": [
        [
          {
            "node": "Update row for 'content' and 'category'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "content extractor": {
      "main": [
        [
          {
            "node": "Clean up scrapped content data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buffer (to prevent connectivity to server errors)": {
      "main": [
        [
          {
            "node": "content extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "call the article page": {
      "main": [
        [
          {
            "node": "buffer (to prevent connectivity to server errors)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start from row 2": {
      "main": [
        [
          {
            "node": "Article analyser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in spreadsheet": {
      "main": [
        [
          {
            "node": "start from row 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Article analyser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Update row for 'content' and 'category'": {
      "main": [
        [
          {
            "node": "Replace Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in spreadsheet1": {
      "main": [
        [
          {
            "node": "start from row ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start from row ": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "website analyser!",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f6440d95-f4de-4288-a5ff-38f55d39707c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c0995d6d56d8610dafb5446a7b8a8a87ca33595743e57750142488a73c004c71"
  },
  "id": "MJDZDC71aDcQfjIa",
  "tags": []
}
